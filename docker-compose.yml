services:
  springboot-app:
    container_name: 'elegant-springboot'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:${DB_CONNECTION}://elegant-mysql:${DB_PORT}/${DB_DATABASE}'
      SPRING_DATASOURCE_USERNAME: '${DB_USERNAME}'
      SPRING_DATASOURCE_PASSWORD: '${DB_PASSWORD}'
      SPRING_JPA_HIBERNATE_DDL_AUTO: 'update'
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: 'com.mysql.cj.jdbc.Driver'
      SPRING_JPA_SHOW_SQL: 'true'
    volumes:
      - '.:/app'
      - '/app/target'
    command: mvn spring-boot:run
    depends_on:
      - mysql
    networks:
      - elegant-network

  mysql:
    container_name: 'elegant-mysql'
    image: 'mysql/mysql-server:8.0'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    volumes:
      - 'elegant-db:/var/lib/mysql'
      - './build/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
      - './build/database/mysql/init.sh:/docker-entrypoint-initdb.d/init.sh'
    networks:
      - elegant-network

volumes:
  elegant-db:

networks:
  elegant-network:
